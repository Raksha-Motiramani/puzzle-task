{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moti Beker\\\\Desktop\\\\elitmus1\\\\client\\\\src\\\\components\\\\LeaderBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard(_ref) {\n  _s();\n  let {\n    username,\n    score\n  } = _ref;\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  // Fetch leaderboard data from backend\n  useEffect(() => {\n    async function fetchLeaderboard() {\n      const response = await fetch('/leaderboard');\n      const data = await response.json();\n      setLeaderboard(data);\n    }\n    fetchLeaderboard();\n  }, []);\n\n  // Submit user's score to backend when game is over\n  useEffect(() => {\n    async function submitScore() {\n      try {\n        const response = await fetch('/leaderboard', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            score\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to submit score');\n        }\n        console.log('Score submitted successfully');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (score !== null) {\n      submitScore();\n    }\n  }, [username, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, player._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"PPVNizXARFYiQit+ETff58MVIIM=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Leaderboard","_ref","_s","username","score","leaderboard","setLeaderboard","fetchLeaderboard","response","fetch","data","json","submitScore","method","headers","body","JSON","stringify","ok","Error","console","log","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","_id","_c","$RefreshReg$"],"sources":["C:/Users/Moti Beker/Desktop/elitmus1/client/src/components/LeaderBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Leaderboard({ username, score }) {\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n\r\n  // Fetch leaderboard data from backend\r\n  useEffect(() => {\r\n    async function fetchLeaderboard() {\r\n      const response = await fetch('/leaderboard');\r\n      const data = await response.json();\r\n      setLeaderboard(data);\r\n    }\r\n    fetchLeaderboard();\r\n  }, []);\r\n\r\n  // Submit user's score to backend when game is over\r\n  useEffect(() => {\r\n    async function submitScore() {\r\n      try {\r\n        const response = await fetch('/leaderboard', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ username, score })\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to submit score');\r\n        }\r\n        console.log('Score submitted successfully');\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    if (score !== null) {\r\n      submitScore();\r\n    }\r\n  }, [username, score]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Leaderboard</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>Score</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((player, index) => (\r\n            <tr key={player._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{player.username}</td>\r\n              <td>{player.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}