{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moti Beker\\\\Desktop\\\\elitmus1\\\\client\\\\src\\\\components\\\\LeaderBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const location = useLocation();\n  const {\n    username,\n    score\n  } = location.state;\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  // Fetch leaderboard data from backend\n  useEffect(() => {\n    async function fetchLeaderboard() {\n      const response = await fetch('http://localhost:5000/leaderboard');\n      const data = await response.json();\n      setLeaderboard(data);\n    }\n    fetchLeaderboard();\n  }, []);\n\n  // Submit user's score to backend when game is over\n  useEffect(() => {\n    async function submitScore() {\n      try {\n        const response = await fetch('http://localhost:5000/leaderboard', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            score\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to submit score');\n        }\n        console.log('Score submitted successfully');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (score !== null) {\n      submitScore();\n    }\n  }, [username, score]);\n  function handleBackToMainPage() {\n    navigate('/Mainpage', {\n      state: {\n        username,\n        score\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, player._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToMainPage,\n      children: \"Back to Main Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"RaiZ98Beze2HIR3CBNwhQd/Ssco=\", false, function () {\n  return [useLocation];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Leaderboard","_s","location","username","score","state","leaderboard","setLeaderboard","fetchLeaderboard","response","fetch","data","json","submitScore","method","headers","body","JSON","stringify","ok","Error","console","log","err","error","handleBackToMainPage","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Moti Beker/Desktop/elitmus1/client/src/components/LeaderBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Leaderboard() {\r\n  const location = useLocation();\r\n  const { username , score } = location.state;\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n\r\n  // Fetch leaderboard data from backend\r\n  useEffect(() => {\r\n    async function fetchLeaderboard() {\r\n      const response = await fetch('http://localhost:5000/leaderboard');\r\n      const data = await response.json();\r\n      setLeaderboard(data);\r\n    }\r\n    fetchLeaderboard();\r\n  }, []);\r\n\r\n  // Submit user's score to backend when game is over\r\n  useEffect(() => {\r\n    async function submitScore() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/leaderboard', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ username, score })\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to submit score');\r\n        }\r\n        console.log('Score submitted successfully');\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    if (score !== null) {\r\n      submitScore();\r\n    }\r\n  }, [username, score]);\r\n\r\n  function handleBackToMainPage() {\r\n    navigate('/Mainpage',{ state: { username, score } });\r\n  }\r\n\r\n  return (  \r\n    <div>\r\n      <h2>{username}</h2>\r\n      <h2>{score}</h2>\r\n      <h2>Leaderboard</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>Score</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((player, index) => (\r\n            <tr key={player._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{player.username}</td>\r\n              <td>{player.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleBackToMainPage}>Back to Main Page</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}